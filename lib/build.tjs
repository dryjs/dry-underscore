
exports.mixin = function(_){

var build = {};

build.fileIsModule = function(path){
    var extensions = ["js", "tjs"];

    var pathChecker = _.partial(_.paths.extension.is, path);

    return(_.any(extensions, pathChecker));
};

build.fetchModule = function(path, callback){
    var module = null;

    try{ module = require(path); }
    catch(e){ 
        if(!_.ecode.noEnt(e)){ 
            e.path = path;
            return callback(e);
        }
    }

    callback(null, module);
};

build.fetchModules = function(root, callback){

    await{ _.fs.files(root, _.plumb(defer(var files), callback)); }

    var modules = [];
    files = _.filter(files, build.fileIsModule);

    _.beach(files, function(path){
        try{ 
            modules.push({ module: require(path), path: path });
        }catch(e){ 
            e.path = path;
            modules.push({ error: e, path: path });
        }
    });

    callback(null, modules);
};
 
return(build);

};

