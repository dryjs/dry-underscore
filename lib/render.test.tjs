"use strict";

var _ = require('../');
var eq = _.test.eq;
var ok = _.test.ok;
var same = _.test.same;
var throws = _.test.throws;

var root = _.path.fun(_.path.normalize(__dirname + "/zandbox/render-templates/"));

suite('render');

test("handlebars", function(){

    var data = {"person": { "name": "Alan" }, "company": {"name": "Rad, Inc." } };
    var template = "{{person.name}} - {{company.name}}";

    // var pre = _.time("pre");
    eq("Alan - Rad, Inc.", _.render.once(template, data));
    // pre();

    // var post = _.time("post");
    eq("Alan - Rad, Inc.", _.render.once(template, data));
    // post();

    _.render.load_directory(root());

    _.render.load_file("single", root("echo.hb"));
    _.render.load_file("single_two", root("echo.hb"));

    eq(_.render("single", { data: "hello" }), "hello");
    eq(_.render("single_two", { data: "hello" }), "hello");

    eq(_.render("echo_one", { data: "hello" }), "hello");
    eq(_.render("echo_two", { data: "hello" }), "hello");

});

test('render.file', function(callback){
    _.render.file(root('echo.hb'), { data: "hello" }, function(err, result){
        eq(err, null);
        eq(result, "hello\n");
        callback();
    });
});

test('render.file.sync', function(){
    var result = _.render.file.sync(root('echo.hb'), { data: "hello" });
    eq(result, "hello\n");
});

test('render.folder', function(callback){

    var temp = _.path.fun(root('temp'));

    try{ _.fs.rmdir.sync(temp()); }catch(e){}
    
    function ignore(info){ return(info.name === "ignore.txt"); }

    function file_name_changer(new_name, info){ 
        if(new_name === "plain.txt"){ return("plain.changed.txt"); }
    }

    await{ _.render.folder(root('templates'), temp(), { data: "some_data" }, ignore, file_name_changer, _.plumb(defer(), callback)); }

    // echo_one.hb, echo_two.hb, ignore.txt, plain.txt, text_file.txt.hb

    eq(_.fs.read_file.sync(temp('echo_one')), "some_data\n");
    eq(_.fs.read_file.sync(temp('echo_two')), "some_data\n");
    eq(_.fs.directory_exists.sync(temp('child')), true);
    eq(_.fs.read_file.sync(temp('child/echo_three')), "some_data\n");
    eq(_.fs.read_file.sync(temp('text_file.txt')), "some_data\n");
    eq(_.fs.read_file.sync(temp('plain.changed.txt')), "plain\n");
    eq(_.fs.exists.sync(temp('ignore.txt')), false);

    _.fs.rmdir.sync(root('temp'));

    callback();
});


